  template:
    # terraform:
    #   backend:
    #     s3:
    #       region: 'us-east-1'
    #       bucket: 'bucket-name'
    #       key: 'path/to/terraform.tfstate'
    resource:
      aws_cloudfront_distribution:
        {{ name }}:
          viewer_protocol_policy: var.{{ name }}_viewer_protocol_policy
          restrictions: 
            -
              geo_restriction: 
                -
                  restriction_type: ''
          #         locations: 
          enabled: var.{{ name }}_enabled
          viewer_certificate: 
            -
          #     acm_certificate_arn: ''
          #     cloudfront_default_certificate: false
          #     iam_certificate_id: ''
          #     minimum_protocol_version: ''
          #     ssl_support_method: ''
          target_origin_id: var.{{ name }}_target_origin_id
          path_pattern: var.{{ name }}_path_pattern
          origin_id: var.{{ name }}_origin_id
          origin: 
          #   custom_origin_config: 
          #     -
          #       origin_protocol_policy: ''
          #       origin_ssl_protocols: []
          #       http_port: 0
          #       https_port: 0
          #       origin_read_timeout: 0
          #       origin_keepalive_timeout: 0
          default_cache_behavior: 
            -
              allowed_methods: []
              cached_methods: []
              forwarded_values: 
                -
                  cookies: 
                    -
                      forward: ''
          #             whitelisted_names: 
          #     compress: false
          #     default_ttl: 0
          #     field_level_encryption_id: ''
          # default_root_object: ''
          # tags: 
          #   '[TO_BE_REPLACED]': ''
          # lambda_function_association: 
          #   event_type: ''
          #   lambda_arn: ''
          #   include_body: false
          # comment: ''
          # origin_path: ''
          # s3_origin_config: 
          #   -
          #     origin_access_identity: ''
          # web_acl_id: ''
          # trusted_signers: []
          # origin_group: 
          #   origin_id: ''
          #   failover_criteria: 
          #     -
          #       status_codes: 
          # retain_on_delete: false
          # max_ttl: 0
          # aliases: []
          # price_class: ''
          # is_ipv6_enabled: false
          # wait_for_deployment: false
          # ordered_cache_behavior: 
          #   -
          #     forwarded_values: 
          #       -
          #         cookies: 
          #           -
          #             forward: ''
          #             whitelisted_names: 
          #     allowed_methods: []
          #     cached_methods: []
          #     default_ttl: 0
          #     field_level_encryption_id: ''
          #     compress: false
          # custom_error_response: 
          #   error_code: 0
          #   error_caching_min_ttl: 0
          #   response_code: 0
          #   response_page_path: ''
          # cache_behavior: 
          #   forwarded_values: 
          #     cookies: 
          #       forward: ''
          #       whitelisted_names: 
          #   allowed_methods: []
          #   cached_methods: []
          #   field_level_encryption_id: ''
          #   compress: false
          #   default_ttl: 0
          # smooth_streaming: false
          # http_version: ''
          # logging_config: 
          #   -
          #     bucket: ''
          #     include_cookies: false
          #     prefix: ''
          # min_ttl: 0
    variable:
      {{ name }}_viewer_protocol_policy:
        type: string
      {{ name }}_enabled:
        type: bool
      {{ name }}_target_origin_id:
        type: string
      {{ name }}_path_pattern:
        type: string
      {{ name }}_origin_id:
        type: string
    output:
      id:
        value: aws_cloudfront_distribution.{{ name }}.id
      thub_id:
        value: aws_cloudfront_distribution.{{ name }}.id
      last_modified_time:
        value: aws_cloudfront_distribution.{{ name }}.last_modified_time
      hosted_zone_id:
        value: aws_cloudfront_distribution.{{ name }}.hosted_zone_id
      active_trusted_signers:
        value: aws_cloudfront_distribution.{{ name }}.active_trusted_signers
      domain_name:
        value: aws_cloudfront_distribution.{{ name }}.domain_name
      arn:
        value: aws_cloudfront_distribution.{{ name }}.arn
      caller_reference:
        value: aws_cloudfront_distribution.{{ name }}.caller_reference
      status:
        value: aws_cloudfront_distribution.{{ name }}.status
      in_progress_validation_batches:
        value: aws_cloudfront_distribution.{{ name }}.in_progress_validation_batches
      etag:
        value: aws_cloudfront_distribution.{{ name }}.etag

## hook config
# hook:
#  apply:
#    after:
#      - terrahub build -i {{ name }}

## build config
# build:
#   env:
#     variables:
#       TERRAHUB_VAR_S3_BUCKET_NAME: [REPLACE_WITH_YOUR_VALUE]
#   phases:
#     build:
#       commands:
#         - echo '[BUILD] Running build step'
#         - if [[ -f ${TERRAHUB_COMPONENT_HOME}/scripts/build.sh ]]; then ${TERRAHUB_COMPONENT_HOME}/scripts/build.sh; else ${TERRAHUB_CLI_HOME}/lib/scripts/aws/cloudfront_distribution/build.sh; fi || { echo >&2 "[ERROR] Failed to run 'build.sh'. Aborting..."; exit 1; }
#       finally:
#         - echo '[BUILD] Finished build step'
